name: cypress

on:
  push:
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: [12]
        os: [ubuntu-18.04, ubuntu-20.04]

    services:
      postgres:
        image: postgres:12.4
        env:
          POSTGRES_DB: ${{ secrets.TEST_DB_NAME }}
          POSTGRES_USER: ${{ secrets.TEST_DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    name: Node ${{ matrix.node }} - ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Yarn install
        run: yarn install

      - name: Create logchimp config file
        run: |
          PG_DATABASE=${{ secrets.TEST_DB_NAME }} \
          PG_HOST="localhost" \
          PG_USER=${{ secrets.TEST_DB_USER }} \
          PG_PASSWORD=${{ secrets.TEST_DB_PASSWORD }} \
          PG_PORT=5432 \
          SECRET_KEY=${{ secrets.TEST_SECRET_KEY }} \
          sh ./scripts/create-config.sh

      - name: Cypress
        uses: cypress-io/github-action@v2
        with:
          command: npm run cypress:run
          start: npm run server:start, npm run frontend:dev
          wait-on: 'http://localhost:3000/api, http://localhost:8080'

      - name: Upload screenshots
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: screenshots
          path: cypress/screenshots/*

      - name: Upload videos
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: videos
          path: cypress/videos/*
